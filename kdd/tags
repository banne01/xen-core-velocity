!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CFILES	Makefile	/^CFILES  := kdd.c kdd-xen.c$/;"	m
KDD_ACK_BAD	kdd.h	81;"	d
KDD_ACK_OK	kdd.h	80;"	d
KDD_ACK_RST	kdd.h	82;"	d
KDD_CMD_CONT1	kdd.h	176;"	d
KDD_CMD_CONT2	kdd.h	177;"	d
KDD_CMD_HARD_BP	kdd.h	161;"	d
KDD_CMD_READ_CTRL	kdd.h	110;"	d
KDD_CMD_READ_MSR	kdd.h	139;"	d
KDD_CMD_READ_PA	kdd.h	112;"	d
KDD_CMD_READ_REGS	kdd.h	130;"	d
KDD_CMD_READ_VA	kdd.h	108;"	d
KDD_CMD_SETCPU	kdd.h	219;"	d
KDD_CMD_SHAKE	kdd.h	191;"	d
KDD_CMD_SOFT_BP	kdd.h	152;"	d
KDD_CMD_WRITE_CTRL	kdd.h	111;"	d
KDD_CMD_WRITE_MSR	kdd.h	140;"	d
KDD_CMD_WRITE_PA	kdd.h	113;"	d
KDD_CMD_WRITE_REGS	kdd.h	131;"	d
KDD_CMD_WRITE_VA	kdd.h	109;"	d
KDD_CMD_WRITE_Z	kdd.h	116;"	d
KDD_DBG_CONTINUE	kdd.h	180;"	d
KDD_DBG_EXCEPTION_HANDLED	kdd.h	179;"	d
KDD_DEBUG	kdd.h	518;"	d
KDD_DIR_ACK	kdd.h	63;"	d
KDD_DIR_PKT	kdd.h	62;"	d
KDD_FLAGS_64	kdd.h	197;"	d
KDD_FLAGS_MP	kdd.h	196;"	d
KDD_LOG	kdd.h	517;"	d
KDD_LOG_IF	kdd.h	510;"	d
KDD_MACH_x32	kdd.h	193;"	d
KDD_MACH_x64	kdd.h	194;"	d
KDD_MSG_PRINT	kdd.h	252;"	d
KDD_PKT_CMD	kdd.h	74;"	d
KDD_PKT_MAX	kdd.h	78;"	d
KDD_PKT_MSG	kdd.h	75;"	d
KDD_PKT_REG	kdd.h	77;"	d
KDD_PKT_STC	kdd.h	76;"	d
KDD_REG_CHANGE	kdd.h	264;"	d
KDD_STATUS_FAILURE	kdd.h	100;"	d
KDD_STATUS_PENDING	kdd.h	101;"	d
KDD_STATUS_SUCCESS	kdd.h	99;"	d
KDD_STC_LOAD	kdd.h	276;"	d
KDD_STC_STATUS_BREAKPOINT	kdd.h	278;"	d
KDD_STC_STOP	kdd.h	275;"	d
MAPSIZE	kdd-xen.c	49;"	d	file:
OBJS	Makefile	/^OBJS    := $(CFILES:.c=.o)$/;"	m
PACKED	kdd.h	40;"	d
PAGE_SHIFT	kdd-xen.c	51;"	d	file:
PAGE_SHIFT	kdd.c	168;"	d	file:
PAGE_SIZE	kdd-xen.c	52;"	d	file:
PAGE_SIZE	kdd.c	169;"	d	file:
XEN_ROOT	Makefile	/^XEN_ROOT = $(CURDIR)\/..\/..\/..$/;"	m
_KDD_H_	kdd.h	36;"	d
addr	kdd.h	/^    uint64_t addr;              \/* IN: address of start of read\/write *\/$/;"	m	struct:__anon2
address	kdd.h	/^    uint64_t address;           \/* IN: Address to trap on *\/$/;"	m	struct:__anon6
base	kdd.c	/^    uint64_t base;              \/* KernBase: start looking here *\/$/;"	m	struct:__anon32	file:
blocking_write	kdd.c	/^static size_t blocking_write(int fd, const void *buf, size_t count)$/;"	f	file:
bp	kdd.h	/^    uint32_t bp;                \/* IN: ID of breakpoint to operate on *\/$/;"	m	struct:__anon5
build	kdd.c	/^    uint32_t build;             $/;"	m	struct:__anon32	file:
c32	kdd.h	/^    kdd_ctrl_x86_32 c32;$/;"	m	union:__anon27
c64	kdd.h	/^    kdd_ctrl_x86_64 c64;$/;"	m	union:__anon27
check_os	kdd.c	/^static int check_os(kdd_state *s)$/;"	f	file:
cmd	kdd.h	/^        kdd_cmd cmd;$/;"	m	union:__anon18::__anon19
cont	kdd.h	/^        kdd_cmd_cont cont;$/;"	m	union:__anon10::__anon11
cpu	kdd.h	/^    uint16_t cpu;               \/* IN: Zero-based processor ID *\/$/;"	m	struct:__anon3
cpu	kdd.h	/^    uint16_t cpu;               \/* IN: Zero-based processor ID *\/$/;"	m	struct:__anon9
cpu	kdd.h	/^    uint16_t cpu;               \/* Zero-based processor ID *\/$/;"	m	struct:__anon14
cpuid	kdd.c	/^    int cpuid;                                      \/* Current selected CPU *\/$/;"	m	struct:__anon33	file:
cr0	kdd.h	/^    uint32_t cr0;$/;"	m	struct:__anon25
cr0	kdd.h	/^    uint64_t cr0;$/;"	m	struct:__anon26
cr2	kdd.h	/^    uint32_t cr2;$/;"	m	struct:__anon25
cr2	kdd.h	/^    uint64_t cr2;$/;"	m	struct:__anon26
cr3	kdd.h	/^    uint32_t cr3;$/;"	m	struct:__anon25
cr3	kdd.h	/^    uint64_t cr3; $/;"	m	struct:__anon26
cr4	kdd.h	/^    uint32_t cr4;$/;"	m	struct:__anon25
cr4	kdd.h	/^    uint64_t cr4;$/;"	m	struct:__anon26
cr8	kdd.h	/^    uint64_t cr8;$/;"	m	struct:__anon26
cs	kdd.h	/^        int32_t cs;$/;"	m	struct:__anon20::__anon21
cs	kdd.h	/^        uint16_t cs; \/\/2*1c$/;"	m	struct:__anon22::__anon23
cur	kdd.c	/^    unsigned int cur;       \/* Offset into rx where we'll put the next byte *\/$/;"	m	struct:__anon33	file:
data	kdd.h	/^    uint8_t data[0];$/;"	m	struct:__anon10
data_addr	kdd.h	/^    int64_t data_addr;          \/* OUT: DebuggerDataList *\/$/;"	m	struct:__anon8
dir	kdd.h	/^    uint32_t dir;     \/* KDD_DIR_PKT or KDD_DIR_ACK *\/$/;"	m	struct:__anon1
domid	kdd-xen.c	/^    uint32_t domid;$/;"	m	struct:kdd_guest	file:
dr0	kdd.h	/^        uint64_t dr0;$/;"	m	struct:__anon22::__anon23
dr0	kdd.h	/^    uint32_t dr0;$/;"	m	struct:__anon25
dr0	kdd.h	/^    uint64_t dr0;$/;"	m	struct:__anon26
dr1	kdd.h	/^        uint64_t dr1;$/;"	m	struct:__anon22::__anon23
dr1	kdd.h	/^    uint32_t dr1;$/;"	m	struct:__anon25
dr1	kdd.h	/^    uint64_t dr1;$/;"	m	struct:__anon26
dr2	kdd.h	/^        uint64_t dr2;$/;"	m	struct:__anon22::__anon23
dr2	kdd.h	/^    uint32_t dr2;$/;"	m	struct:__anon25
dr2	kdd.h	/^    uint64_t dr2;$/;"	m	struct:__anon26
dr3	kdd.h	/^        uint64_t dr3;$/;"	m	struct:__anon22::__anon23
dr3	kdd.h	/^    uint32_t dr3;$/;"	m	struct:__anon25
dr3	kdd.h	/^    uint64_t dr3;$/;"	m	struct:__anon26
dr6	kdd.h	/^        uint64_t dr6;$/;"	m	struct:__anon22::__anon23
dr6	kdd.h	/^    uint32_t dr6;$/;"	m	struct:__anon25
dr6	kdd.h	/^    uint64_t dr6;$/;"	m	struct:__anon26
dr7	kdd.h	/^        uint64_t dr7;$/;"	m	struct:__anon22::__anon23
dr7	kdd.h	/^    uint32_t dr7;$/;"	m	struct:__anon25
dr7	kdd.h	/^    uint64_t dr7;   $/;"	m	struct:__anon26
ds	kdd.h	/^        int32_t ds;$/;"	m	struct:__anon20::__anon21
ds	kdd.h	/^        uint16_t ds;$/;"	m	struct:__anon22::__anon23
eax	kdd.h	/^        int32_t eax;$/;"	m	struct:__anon20::__anon21
ebp	kdd.h	/^        int32_t ebp;$/;"	m	struct:__anon20::__anon21
ebx	kdd.h	/^        int32_t ebx;$/;"	m	struct:__anon20::__anon21
ecx	kdd.h	/^        int32_t ecx;$/;"	m	struct:__anon20::__anon21
edi	kdd.h	/^        int32_t edi;$/;"	m	struct:__anon20::__anon21
edx	kdd.h	/^        int32_t edx;$/;"	m	struct:__anon20::__anon21
efer	kdd.h	/^    uint64_t efer; \/\/ XXX find out where EFER actually goes$/;"	m	struct:__anon26
eflags	kdd.h	/^        int32_t eflags;$/;"	m	struct:__anon20::__anon21
eip	kdd.h	/^        int32_t eip;$/;"	m	struct:__anon20::__anon21
es	kdd.h	/^        int32_t es;$/;"	m	struct:__anon20::__anon21
es	kdd.h	/^        uint16_t es;$/;"	m	struct:__anon22::__anon23
esi	kdd.h	/^        int32_t esi;$/;"	m	struct:__anon20::__anon21
esp	kdd.h	/^        int32_t esp;$/;"	m	struct:__anon20::__anon21
fd	kdd.c	/^    int fd;                                  \/* TCP socket for client comms *\/$/;"	m	struct:__anon33	file:
find_os	kdd.c	/^static void find_os(kdd_state *s)$/;"	f	file:
first_chance	kdd.h	/^    uint64_t first_chance;      \/* OS exn handlers not yet been run? *\/$/;"	m	struct:__anon14
flags	kdd.h	/^    uint16_t flags;             \/* OUT: Some flags (at least 0x3) *\/$/;"	m	struct:__anon8
flush_maps	kdd-xen.c	/^static void flush_maps(kdd_guest *g)$/;"	f	file:
fp	kdd.h	/^        uint8_t fp[112];        \/* FP save state (why 112 not 108?) *\/$/;"	m	struct:__anon20::__anon21
fp	kdd.h	/^        uint8_t fp[512]; \/\/ fp @2*100 .. 150 (+ more??)$/;"	m	struct:__anon22::__anon23
fs	kdd.h	/^        int32_t fs;$/;"	m	struct:__anon20::__anon21
fs	kdd.h	/^        uint16_t fs;$/;"	m	struct:__anon22::__anon23
gdt_base	kdd.h	/^    uint32_t gdt_base;$/;"	m	struct:__anon25
gdt_base	kdd.h	/^    uint64_t gdt_base;$/;"	m	struct:__anon26
gdt_limit	kdd.h	/^    uint16_t gdt_limit;$/;"	m	struct:__anon25
gdt_limit	kdd.h	/^    uint16_t gdt_limit;$/;"	m	struct:__anon26
gdt_pad	kdd.h	/^    uint16_t gdt_pad;$/;"	m	struct:__anon25
gdt_pad	kdd.h	/^    uint8_t  gdt_pad[6];$/;"	m	struct:__anon26
get_cpu	kdd-xen.c	/^static struct hvm_hw_cpu *get_cpu(kdd_guest *g, int cpuid)$/;"	f	file:
get_lapic	kdd-xen.c	/^static struct hvm_hw_lapic_regs *get_lapic(kdd_guest *g, int cpuid)$/;"	f	file:
gs	kdd.h	/^        int32_t gs;$/;"	m	struct:__anon20::__anon21
gs	kdd.h	/^        uint16_t gs;$/;"	m	struct:__anon22::__anon23
guest	kdd.c	/^    kdd_guest *guest;              \/* Arch-specific state for guest control *\/$/;"	m	struct:__anon33	file:
h	kdd.h	/^    kdd_hdr h;                  \/* Major type disambiguates union below *\/$/;"	m	struct:__anon18
hbp	kdd.h	/^        kdd_cmd_hard_bp hbp;$/;"	m	union:__anon10::__anon11
hvm_buf	kdd-xen.c	/^    void *hvm_buf;$/;"	m	struct:kdd_guest	file:
hvm_sz	kdd-xen.c	/^    uint32_t hvm_sz;$/;"	m	struct:kdd_guest	file:
hvm_writeback	kdd-xen.c	/^static void hvm_writeback(kdd_guest *g)$/;"	f	file:
id	kdd-xen.c	/^    char id[80];$/;"	m	struct:kdd_guest	file:
id	kdd.h	/^    uint32_t id;      \/* Echoed in responses *\/$/;"	m	struct:__anon1
idt_base	kdd.h	/^    uint32_t idt_base;$/;"	m	struct:__anon25
idt_base	kdd.h	/^    uint64_t idt_base;$/;"	m	struct:__anon26
idt_limit	kdd.h	/^    uint16_t idt_limit;$/;"	m	struct:__anon25
idt_limit	kdd.h	/^    uint16_t idt_limit;$/;"	m	struct:__anon26
idt_pad	kdd.h	/^    uint16_t idt_pad;$/;"	m	struct:__anon25
idt_pad	kdd.h	/^    uint8_t  idt_pad[6];$/;"	m	struct:__anon26
ilen	kdd.h	/^    uint32_t ilen;              \/* Number of bytes of instruction following *\/$/;"	m	struct:__anon14
inst	kdd.h	/^    uint8_t inst[36];           \/* VA contents from %eip onwards *\/$/;"	m	struct:__anon14
kdd_access_physical	kdd-xen.c	/^uint32_t kdd_access_physical(kdd_guest *g, uint64_t addr, $/;"	f
kdd_access_physical_page	kdd-xen.c	/^static uint32_t kdd_access_physical_page(kdd_guest *g, uint64_t addr, $/;"	f	file:
kdd_access_virtual	kdd.c	/^static uint32_t kdd_access_virtual(kdd_state *s, int cpuid, uint64_t addr,$/;"	f	file:
kdd_break	kdd.c	/^static void kdd_break(kdd_state *s)$/;"	f	file:
kdd_cmd	kdd.h	/^} PACKED kdd_cmd;$/;"	t	typeref:struct:__anon10
kdd_cmd_cont	kdd.h	/^} PACKED kdd_cmd_cont;$/;"	t	typeref:struct:__anon7
kdd_cmd_hard_bp	kdd.h	/^} PACKED kdd_cmd_hard_bp;$/;"	t	typeref:struct:__anon6
kdd_cmd_mem	kdd.h	/^} PACKED kdd_cmd_mem;$/;"	t	typeref:struct:__anon2
kdd_cmd_msr	kdd.h	/^} PACKED kdd_cmd_msr;$/;"	t	typeref:struct:__anon4
kdd_cmd_regs	kdd.h	/^} PACKED kdd_cmd_regs;$/;"	t	typeref:struct:__anon3
kdd_cmd_setcpu	kdd.h	/^} PACKED kdd_cmd_setcpu;$/;"	t	typeref:struct:__anon9
kdd_cmd_shake	kdd.h	/^} PACKED kdd_cmd_shake;$/;"	t	typeref:struct:__anon8
kdd_cmd_soft_bp	kdd.h	/^} PACKED kdd_cmd_soft_bp;$/;"	t	typeref:struct:__anon5
kdd_count_cpus	kdd-xen.c	/^int kdd_count_cpus(kdd_guest *g)$/;"	f
kdd_ctrl	kdd.h	/^} kdd_ctrl;$/;"	t	typeref:union:__anon27
kdd_ctrl_x86_32	kdd.h	/^} PACKED kdd_ctrl_x86_32;$/;"	t	typeref:struct:__anon25
kdd_ctrl_x86_64	kdd.h	/^} PACKED kdd_ctrl_x86_64;$/;"	t	typeref:struct:__anon26
kdd_get_ctrl	kdd-xen.c	/^int kdd_get_ctrl(kdd_guest *g, int cpuid, kdd_ctrl *ctrl, int w64)$/;"	f
kdd_get_ctrl_x86_32	kdd-xen.c	/^static void kdd_get_ctrl_x86_32(struct hvm_hw_cpu *cpu, kdd_ctrl_x86_32 *c)$/;"	f	file:
kdd_get_ctrl_x86_64	kdd-xen.c	/^static void kdd_get_ctrl_x86_64(struct hvm_hw_cpu *cpu, $/;"	f	file:
kdd_get_ip	kdd.c	/^static uint64_t kdd_get_ip(kdd_state *s)$/;"	f	file:
kdd_get_regs	kdd-xen.c	/^int kdd_get_regs(kdd_guest *g, int cpuid, kdd_regs *r, int w64)$/;"	f
kdd_get_regs_x86_32	kdd-xen.c	/^static void kdd_get_regs_x86_32(struct hvm_hw_cpu *cpu, kdd_regs_x86_32 *r)$/;"	f	file:
kdd_get_regs_x86_64	kdd-xen.c	/^static void kdd_get_regs_x86_64(struct hvm_hw_cpu *cpu, kdd_regs_x86_64 *r)$/;"	f	file:
kdd_guest	kdd-xen.c	/^struct kdd_guest {$/;"	s	file:
kdd_guest	kdd.h	/^typedef struct kdd_guest kdd_guest;$/;"	t	typeref:struct:kdd_guest
kdd_guest_identify	kdd-xen.c	/^char *kdd_guest_identify(kdd_guest *g)$/;"	f
kdd_guest_init	kdd-xen.c	/^kdd_guest *kdd_guest_init(char *arg, FILE *log, int verbosity)$/;"	f
kdd_guest_teardown	kdd-xen.c	/^void kdd_guest_teardown(kdd_guest *g)$/;"	f
kdd_halt	kdd-xen.c	/^void kdd_halt(kdd_guest *g)$/;"	f
kdd_handle_ack	kdd.c	/^static void kdd_handle_ack(kdd_state *s, uint32_t id, uint16_t type)$/;"	f	file:
kdd_handle_handshake	kdd.c	/^static void kdd_handle_handshake(kdd_state *s)$/;"	f	file:
kdd_handle_hard_breakpoint	kdd.c	/^static void kdd_handle_hard_breakpoint(kdd_state *s)$/;"	f	file:
kdd_handle_memory_access	kdd.c	/^static void kdd_handle_memory_access(kdd_state *s)$/;"	f	file:
kdd_handle_pkt	kdd.c	/^static void kdd_handle_pkt(kdd_state *s, kdd_pkt *p)$/;"	f	file:
kdd_handle_read_ctrl	kdd.c	/^static void kdd_handle_read_ctrl(kdd_state *s)$/;"	f	file:
kdd_handle_read_msr	kdd.c	/^static void kdd_handle_read_msr(kdd_state *s)$/;"	f	file:
kdd_handle_read_regs	kdd.c	/^static void kdd_handle_read_regs(kdd_state *s)$/;"	f	file:
kdd_handle_setcpu	kdd.c	/^static void kdd_handle_setcpu(kdd_state *s)$/;"	f	file:
kdd_handle_soft_breakpoint	kdd.c	/^static void kdd_handle_soft_breakpoint(kdd_state *s)$/;"	f	file:
kdd_handle_write_msr	kdd.c	/^static void kdd_handle_write_msr(kdd_state *s)$/;"	f	file:
kdd_handle_write_regs	kdd.c	/^static void kdd_handle_write_regs(kdd_state *s)$/;"	f	file:
kdd_hdr	kdd.h	/^} PACKED kdd_hdr;$/;"	t	typeref:struct:__anon1
kdd_init	kdd.c	/^static int kdd_init(kdd_state **sp, struct addrinfo *addr, $/;"	f	file:
kdd_log_pkt	kdd.c	/^static void kdd_log_pkt(kdd_state *s, char *name, kdd_pkt *p)$/;"	f	file:
kdd_msg	kdd.h	/^} PACKED kdd_msg;$/;"	t	typeref:struct:__anon12
kdd_os	kdd.c	/^} kdd_os;$/;"	t	typeref:struct:__anon32	file:
kdd_pkt	kdd.h	/^} PACKED kdd_pkt;$/;"	t	typeref:struct:__anon18
kdd_poll_guest	kdd-xen.c	/^int kdd_poll_guest(kdd_guest *g)$/;"	f
kdd_rdmsr	kdd-xen.c	/^int kdd_rdmsr(kdd_guest *g, int cpuid, uint32_t msr, uint64_t *value)$/;"	f
kdd_read_physical	kdd.c	/^static uint32_t kdd_read_physical(kdd_state *s, uint64_t addr, $/;"	f	file:
kdd_read_virtual	kdd.c	/^static uint32_t kdd_read_virtual(kdd_state *s, int cpuid, uint64_t addr,$/;"	f	file:
kdd_reg	kdd.h	/^} PACKED kdd_reg;$/;"	t	typeref:struct:__anon13
kdd_regs	kdd.h	/^} PACKED kdd_regs;$/;"	t	typeref:union:__anon24
kdd_regs_x86_32	kdd.h	/^} PACKED kdd_regs_x86_32;$/;"	t	typeref:union:__anon20
kdd_regs_x86_64	kdd.h	/^} PACKED kdd_regs_x86_64;$/;"	t	typeref:union:__anon22
kdd_run	kdd-xen.c	/^void kdd_run(kdd_guest *g)$/;"	f
kdd_select_callback	kdd.c	/^void kdd_select_callback(kdd_state *s)$/;"	f
kdd_send_ack	kdd.c	/^static void kdd_send_ack(kdd_state *s, uint32_t id, uint16_t type)$/;"	f	file:
kdd_send_cmd	kdd.c	/^static void kdd_send_cmd(kdd_state *s, uint32_t subtype, size_t extra)$/;"	f	file:
kdd_send_string	kdd.c	/^static void kdd_send_string(kdd_state *s, char *fmt, ...)$/;"	f	file:
kdd_set_regs	kdd-xen.c	/^int kdd_set_regs(kdd_guest *g, int cpuid, kdd_regs *r, int w64)$/;"	f
kdd_set_regs_x86_32	kdd-xen.c	/^static void kdd_set_regs_x86_32(struct hvm_hw_cpu *cpu, kdd_regs_x86_32 *r)$/;"	f	file:
kdd_set_regs_x86_64	kdd-xen.c	/^static void kdd_set_regs_x86_64(struct hvm_hw_cpu *cpu, kdd_regs_x86_64 *r)$/;"	f	file:
kdd_state	kdd.c	/^} kdd_state;$/;"	t	typeref:struct:__anon33	file:
kdd_stc	kdd.h	/^} PACKED kdd_stc;$/;"	t	typeref:struct:__anon16
kdd_stc_load	kdd.h	/^} PACKED kdd_stc_load;$/;"	t	typeref:struct:__anon15
kdd_stc_stop	kdd.h	/^} PACKED kdd_stc_stop;$/;"	t	typeref:struct:__anon14
kdd_tx	kdd.c	/^static void kdd_tx(kdd_state *s)$/;"	f	file:
kdd_write_physical	kdd.c	/^static uint32_t kdd_write_physical(kdd_state *s, uint64_t addr, $/;"	f	file:
kdd_write_virtual	kdd.c	/^static uint32_t kdd_write_virtual(kdd_state *s, int cpuid, uint64_t addr,$/;"	f	file:
kdd_wrmsr	kdd-xen.c	/^int kdd_wrmsr(kdd_guest *g, int cpuid, uint32_t msr, uint64_t value)$/;"	f
kdd_xc_log	kdd-xen.c	/^static void kdd_xc_log(struct xentoollog_logger *logger,$/;"	f	file:
kern_addr	kdd.h	/^    int64_t kern_addr;          \/* OUT: KernBase *\/$/;"	m	struct:__anon8
kthread	kdd.h	/^    int64_t kthread;            \/* Kernel thread structure *\/$/;"	m	struct:__anon14
ldt_sel	kdd.h	/^    uint16_t ldt_sel;$/;"	m	struct:__anon25
ldt_sel	kdd.h	/^    uint16_t ldt_sel;$/;"	m	struct:__anon26
len	kdd.h	/^    uint16_t len;     \/* Payload length, excl. header and trailing byte *\/$/;"	m	struct:__anon1
length	kdd.h	/^    uint32_t length;            \/* Length in bytes of trailing string *\/$/;"	m	struct:__anon12
length_req	kdd.h	/^    uint32_t length_req;        \/* IN: bytes to read\/write *\/$/;"	m	struct:__anon2
length_rsp	kdd.h	/^    uint32_t length_rsp;        \/* OUT: bytes successfully read\/written *\/$/;"	m	struct:__anon2
load	kdd.h	/^        kdd_stc_load load;$/;"	m	union:__anon16::__anon17
log	kdd-xen.c	/^    FILE *log;$/;"	m	struct:kdd_guest	file:
log	kdd.c	/^    FILE *log;                                        \/* For tracing output *\/$/;"	m	struct:__anon33	file:
machine	kdd.h	/^    uint16_t machine;           \/* OUT: Machine type *\/$/;"	m	struct:__anon8
manips	kdd.h	/^    uint8_t manips;             \/* OUT: number of "manipulation" types used *\/$/;"	m	struct:__anon8
maps	kdd-xen.c	/^    void * maps[MAPSIZE];$/;"	m	struct:kdd_guest	file:
mem	kdd.h	/^        kdd_cmd_mem mem;$/;"	m	union:__anon10::__anon11
mods_addr	kdd.h	/^    int64_t mods_addr;          \/* OUT: PsLoadedModuleList *\/$/;"	m	struct:__anon8
modules	kdd.c	/^    uint32_t modules;           \/* +-> PsLoadedModuleList *\/$/;"	m	struct:__anon32	file:
mp	kdd.c	/^    int mp;$/;"	m	struct:__anon32	file:
msg	kdd.h	/^        kdd_msg msg;$/;"	m	union:__anon18::__anon19
msr	kdd.h	/^        kdd_cmd_msr msr;$/;"	m	union:__anon10::__anon11
msr	kdd.h	/^    uint32_t msr;               \/* IN\/OUT: MSR number *\/$/;"	m	struct:__anon4
name	kdd.c	/^    char *name;$/;"	m	struct:__anon32	file:
ncpus	kdd.h	/^    uint32_t ncpus;             \/* Number of processors *\/$/;"	m	struct:__anon14
next_id	kdd.c	/^    uint32_t next_id;                     \/* ID of next packet we will send *\/$/;"	m	struct:__anon33	file:
nparams	kdd.h	/^    uint64_t nparams;           \/* Number of stopcode parameters *\/$/;"	m	struct:__anon14
os	kdd.c	/^    kdd_os os;                                 \/* OS-specific magic numbers *\/$/;"	m	struct:__anon33	file:
os	kdd.c	/^static kdd_os os[] = {$/;"	v	file:
pad	kdd.h	/^        uint8_t pad[52];$/;"	m	union:__anon10::__anon11
pad	kdd.h	/^    uint32_t pad[179];$/;"	m	union:__anon20
pad	kdd.h	/^    uint64_t pad[154];$/;"	m	union:__anon22
params	kdd.h	/^    uint64_t params[15];        \/* Stopcode parameters *\/$/;"	m	struct:__anon14
path	kdd.h	/^    uint8_t path[0];            \/* Null-terminated ASCII path to loaded mod. *\/$/;"	m	struct:__anon15
payload	kdd.h	/^        uint8_t payload[0];$/;"	m	union:__anon18::__anon19
payload	kdd.h	/^    uint8_t payload[0];$/;"	m	struct:__anon1
pfns	kdd-xen.c	/^    uint32_t pfns[MAPSIZE];$/;"	m	struct:kdd_guest	file:
pkts	kdd.h	/^    uint8_t pkts;               \/* OUT: Number of packet types understood *\/$/;"	m	struct:__anon8
prcbs	kdd.c	/^    uint32_t prcbs;             \/* +-> KiProcessorBlock *\/$/;"	m	struct:__anon32	file:
proto	kdd.h	/^    uint16_t proto;             \/* OUT: Protocol version (6) *\/$/;"	m	struct:__anon8
r10	kdd.h	/^        int64_t r10;$/;"	m	struct:__anon22::__anon23
r11	kdd.h	/^        int64_t r11;$/;"	m	struct:__anon22::__anon23
r12	kdd.h	/^        int64_t r12;$/;"	m	struct:__anon22::__anon23
r13	kdd.h	/^        int64_t r13;$/;"	m	struct:__anon22::__anon23
r14	kdd.h	/^        int64_t r14;$/;"	m	struct:__anon22::__anon23
r15	kdd.h	/^        int64_t r15;$/;"	m	struct:__anon22::__anon23
r32	kdd.h	/^    kdd_regs_x86_32 r32;$/;"	m	union:__anon24
r64	kdd.h	/^    kdd_regs_x86_64 r64;$/;"	m	union:__anon24
r8	kdd.h	/^        int64_t r8;$/;"	m	struct:__anon22::__anon23
r9	kdd.h	/^        int64_t r9;$/;"	m	struct:__anon22::__anon23
range	kdd.c	/^    uint32_t range;             \/* |         and search an area this size *\/$/;"	m	struct:__anon32	file:
rax	kdd.h	/^        int64_t rax;$/;"	m	struct:__anon22::__anon23
rbp	kdd.h	/^        int64_t rbp;$/;"	m	struct:__anon22::__anon23
rbx	kdd.h	/^        int64_t rbx;$/;"	m	struct:__anon22::__anon23
rcx	kdd.h	/^        int64_t rcx;$/;"	m	struct:__anon22::__anon23
rdi	kdd.h	/^        int64_t rdi;$/;"	m	struct:__anon22::__anon23
rdx	kdd.h	/^        int64_t rdx;$/;"	m	struct:__anon22::__anon23
reason1	kdd.h	/^    uint32_t reason1;           \/* IN: KDD_DBG_* *\/$/;"	m	struct:__anon7
reason2	kdd.h	/^    uint64_t reason2;           \/* IN: always same as reason1 *\/$/;"	m	struct:__anon7
reg	kdd.h	/^        kdd_reg reg;$/;"	m	union:__anon18::__anon19
regs	kdd.h	/^        kdd_cmd_regs regs;$/;"	m	union:__anon10::__anon11
rflags	kdd.h	/^        uint32_t rflags;$/;"	m	struct:__anon22::__anon23
rip	kdd.h	/^        int64_t rip; \/\/2*7c$/;"	m	struct:__anon22::__anon23
rip	kdd.h	/^    uint64_t rip;               \/* Instruction pointer, sign-extended *\/$/;"	m	struct:__anon15
rip1	kdd.h	/^    int64_t rip1;               \/* Instruction pointer, sign-extended *\/$/;"	m	struct:__anon14
rip2	kdd.h	/^    int64_t rip2;               \/* Same as rip1 *\/$/;"	m	struct:__anon14
rsi	kdd.h	/^        int64_t rsi;$/;"	m	struct:__anon22::__anon23
rsp	kdd.h	/^        int64_t rsp;$/;"	m	struct:__anon22::__anon23
running	kdd.c	/^    int running;                      \/* Are the guest's processors active? *\/$/;"	m	struct:__anon33	file:
rxb	kdd.c	/^        uint8_t rxb[sizeof (kdd_hdr) + 65536];   \/* Marshalling area for rx *\/$/;"	m	union:__anon33::__anon35	file:
rxp	kdd.c	/^        kdd_pkt rxp;                 \/* Also readable as a packet structure *\/$/;"	m	union:__anon33::__anon35	file:
sbp	kdd.h	/^        kdd_cmd_soft_bp sbp;$/;"	m	union:__anon10::__anon11
setcpu	kdd.h	/^        kdd_cmd_setcpu setcpu;$/;"	m	union:__anon10::__anon11
shake	kdd.h	/^        kdd_cmd_shake shake;$/;"	m	union:__anon10::__anon11
sp2	kdd.h	/^        uint32_t sp2[37];       \/* More 0x20202020. fp? *\/$/;"	m	struct:__anon20::__anon21
sp3	kdd.h	/^        uint32_t sp3;           \/* 0x00202020 *\/$/;"	m	struct:__anon20::__anon21
ss	kdd.h	/^        int32_t ss;$/;"	m	struct:__anon20::__anon21
ss	kdd.h	/^        uint16_t ss;$/;"	m	struct:__anon22::__anon23
states	kdd.h	/^    uint8_t states;             \/* OUT: Number of state-change types used *\/$/;"	m	struct:__anon8
status	kdd.h	/^    uint32_t status;            \/* IN: STATUS_PENDING *\/$/;"	m	struct:__anon9
status	kdd.h	/^    uint32_t status;            \/* IN: STATUS_PENDING; OUT: result status. *\/$/;"	m	struct:__anon2
status	kdd.h	/^    uint32_t status;            \/* IN: STATUS_PENDING; OUT: result status. *\/$/;"	m	struct:__anon3
status	kdd.h	/^    uint32_t status;            \/* IN: STATUS_PENDING; OUT: result status. *\/$/;"	m	struct:__anon4
status	kdd.h	/^    uint32_t status;            \/* IN: STATUS_PENDING; OUT: result status. *\/$/;"	m	struct:__anon5
status	kdd.h	/^    uint32_t status;            \/* IN: STATUS_PENDING; OUT: result status. *\/$/;"	m	struct:__anon6
status	kdd.h	/^    uint32_t status;            \/* IN: STATUS_PENDING; OUT: result status. *\/$/;"	m	struct:__anon8
status	kdd.h	/^    uint64_t status;            \/* KDD_STC_STATUS_x *\/$/;"	m	struct:__anon14
stc	kdd.h	/^        kdd_stc stc;$/;"	m	union:__anon18::__anon19
stop	kdd.h	/^        kdd_stc_stop stop;$/;"	m	union:__anon16::__anon17
string	kdd.h	/^    uint16_t string[0];         \/* Null-terminated wchar string *\/$/;"	m	struct:__anon13
string	kdd.h	/^    uint8_t string[0];          \/* Non-terminated character string *\/$/;"	m	struct:__anon12
subtype	kdd.h	/^    uint32_t subtype;           \/* IN: KDD_CMD_x *\/$/;"	m	struct:__anon10
subtype	kdd.h	/^    uint32_t subtype;           \/* KDD_MSG_PRINT *\/$/;"	m	struct:__anon12
subtype	kdd.h	/^    uint32_t subtype;           \/* KDD_REG_CHANGE *\/$/;"	m	struct:__anon13
subtype	kdd.h	/^    uint32_t subtype;           \/* KDD_STC_x *\/$/;"	m	struct:__anon16
sum	kdd.h	/^    uint32_t sum;     \/* Unsigned sum of all payload bytes *\/$/;"	m	struct:__anon1
tss_sel	kdd.h	/^    uint16_t tss_sel;$/;"	m	struct:__anon25
tss_sel	kdd.h	/^    uint16_t tss_sel;$/;"	m	struct:__anon26
txb	kdd.c	/^        uint8_t txb[sizeof (kdd_hdr) + 65536];   \/* Marshalling area for tx *\/$/;"	m	union:__anon33::__anon34	file:
txp	kdd.c	/^        kdd_pkt txp;                 \/* Also readable as a packet structure *\/$/;"	m	union:__anon33::__anon34	file:
type	kdd.h	/^    uint16_t type;    \/* Major type. *\/$/;"	m	struct:__anon1
u1	kdd.h	/^        uint32_t u1[7];         \/* Flags, DRx?? *\/$/;"	m	struct:__anon20::__anon21
u1	kdd.h	/^        uint64_t u1[7];$/;"	m	struct:__anon22::__anon23
u1	kdd.h	/^    uint16_t u1;$/;"	m	struct:__anon14
u1	kdd.h	/^    uint16_t u1;$/;"	m	struct:__anon3
u1	kdd.h	/^    uint16_t u1;$/;"	m	struct:__anon9
u1	kdd.h	/^    uint32_t u1;$/;"	m	struct:__anon12
u1	kdd.h	/^    uint32_t u1;$/;"	m	struct:__anon2
u1	kdd.h	/^    uint32_t u1;$/;"	m	struct:__anon4
u1	kdd.h	/^    uint32_t u1;$/;"	m	struct:__anon5
u1	kdd.h	/^    uint32_t u1;$/;"	m	struct:__anon6
u1	kdd.h	/^    uint32_t u1;$/;"	m	struct:__anon7
u1	kdd.h	/^    uint32_t u1;$/;"	m	struct:__anon8
u1	kdd.h	/^    uint32_t u1[15];$/;"	m	struct:__anon13
u1	kdd.h	/^    uint32_t u1[3];$/;"	m	struct:__anon15
u1	kdd.h	/^    uint8_t u1[24];$/;"	m	struct:__anon25
u1	kdd.h	/^    uint8_t u1[44];$/;"	m	struct:__anon26
u2	kdd.h	/^        uint64_t u2[32];$/;"	m	struct:__anon22::__anon23
u2	kdd.h	/^    uint32_t u2;$/;"	m	struct:__anon12
u2	kdd.h	/^    uint32_t u2;$/;"	m	struct:__anon14
u2	kdd.h	/^    uint32_t u2;$/;"	m	struct:__anon2
u2	kdd.h	/^    uint32_t u2;$/;"	m	struct:__anon4
u2	kdd.h	/^    uint32_t u2;$/;"	m	struct:__anon5
u2	kdd.h	/^    uint32_t u2;$/;"	m	struct:__anon6
u2	kdd.h	/^    uint32_t u2;$/;"	m	struct:__anon7
u2	kdd.h	/^    uint32_t u2;$/;"	m	struct:__anon8
u2	kdd.h	/^    uint64_t u2;$/;"	m	struct:__anon15
u2	kdd.h	/^    uint8_t u2[40];$/;"	m	struct:__anon26
u3	kdd.h	/^        uint64_t u3[26];$/;"	m	struct:__anon22::__anon23
u3	kdd.h	/^    uint64_t u3;$/;"	m	struct:__anon14
u3	kdd.h	/^    uint64_t u3;$/;"	m	struct:__anon6
u3	kdd.h	/^    uint64_t u3[26];$/;"	m	struct:__anon15
u3	kdd.h	/^    uint8_t u3[3];$/;"	m	struct:__anon8
u4	kdd.h	/^    uint32_t u4[2];$/;"	m	struct:__anon14
u4	kdd.h	/^    uint64_t u4;$/;"	m	struct:__anon6
u5	kdd.h	/^    uint64_t u5;$/;"	m	struct:__anon6
u6	kdd.h	/^    uint64_t u6;$/;"	m	struct:__anon6
unknown_os	kdd.c	/^static kdd_os unknown_os = {0, 0, 0, "unknown OS", 0, 0, 0, 0, 0};$/;"	v	file:
usage	kdd.c	/^static void usage(void)$/;"	f	file:
v2p	kdd.c	/^static uint64_t v2p(kdd_state *s, int cpuid, uint64_t va)$/;"	f	file:
v_major	kdd.h	/^    uint16_t v_major;           \/* OUT: OS major version (0xf for NT) *\/$/;"	m	struct:__anon8
v_minor	kdd.h	/^    uint16_t v_minor;           \/* OUT: OS minor version (NT build number) *\/$/;"	m	struct:__anon8
val	kdd.h	/^    uint64_t val;               \/* IN\/OUT: MSR contents *\/$/;"	m	struct:__anon4
verbosity	kdd-xen.c	/^    int verbosity;$/;"	m	struct:kdd_guest	file:
verbosity	kdd.c	/^    int verbosity;                              \/* How much detail to trace *\/$/;"	m	struct:__anon33	file:
version	kdd.c	/^    uint32_t version;           \/* +-> NtBuildNumber *\/$/;"	m	struct:__anon32	file:
w64	kdd.c	/^    int w64;$/;"	m	struct:__anon32	file:
xc_handle	kdd-xen.c	/^    xc_interface *xc_handle;$/;"	m	struct:kdd_guest	file:
xc_log	kdd-xen.c	/^    struct xentoollog_logger xc_log; \/* Must be first for xc log callbacks *\/$/;"	m	struct:kdd_guest	typeref:struct:kdd_guest::xentoollog_logger	file:
